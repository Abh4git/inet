name: "Build: native"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    # nothing

jobs:
  main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode: ["debug", "release"]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: omnetpp/omnetpp
          path: omnetpp
      - uses: actions/checkout@v3
        with:
          path: inet
      - run: mkdir -p /home/runner/work/ccache
      - uses: actions/cache@v3
        with:
          path: /home/runner/work/ccache
          key: native-${{ matrix.mode }}-ccache-${{ github.run_id }}
          # See: https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache
          restore-keys: native-${{ matrix.mode }}-ccache
      - name: Building native
        run: |
          echo "::group::Installing packages"
          sudo apt-get install -y --no-install-recommends git wget curl ca-certificates \
            make ccache clang lld gdb bison flex perl doxygen graphviz libxml2-dev zlib1g-dev \
            libavcodec-dev libavformat-dev libavutil-dev libswresample-dev libz3-dev python3
          echo "::endgroup::"
 
          echo "::group::Configuring ccache"
          export PATH=/usr/lib/ccache:$PATH
          export CCACHE_DIR=/home/runner/work/ccache
          echo "::endgroup::"

          echo "::group::Running omnetpp setenv"
          cd $GITHUB_WORKSPACE/omnetpp
          cp configure.user.dist configure.user
          . setenv -f
          echo "::endgroup::"

          echo "::group::Configuring omnetpp"
          ./configure WITH_LIBXML=yes WITH_QTENV=no WITH_OSG=no WITH_OSGEARTH=no
          echo "::endgroup::"
 
          echo "::group::Compiling omnetpp"
          make MODE=${{ matrix.mode }} -j $(nproc) base
          echo "::endgroup::"

          echo "::group::Running inet setenv"
          cd $GITHUB_WORKSPACE/inet
          . setenv -f
          echo "::endgroup::"

          echo "::group::Enabling all inet features"
          opp_featuretool enable all
          echo "::endgroup::"

          echo "::group::Disabling some inet features"
          opp_featuretool disable VisualizationOsg VisualizationOsgShowcases SelfDoc
          echo "::endgroup::"

          echo "::group::Making inet makefiles"
          make makefiles
          echo "::endgroup::"

          echo "::group::Compiling inet"
          make MODE=${{ matrix.mode }} -j $(nproc)
          echo "::endgroup::"
      - uses: actions/upload-artifact@v3
        with:
          name: libinet-so
          path: ${{ github.workspace }}/src/libINET*.so
